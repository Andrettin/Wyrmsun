-- Stratagus Map Setup

LoadTileModels("scripts/tilesets/cave.lua")

CleanRawTiles()
CleanHexTiles()

HexTiles = {
	{"Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Tree",  "Tree",  "Land",  "Land",  "Land",  "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Tree",  "Land",  "Rough", "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Tree",  "Tree",  "Land",  "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Tree",  "Land",  "Land",  "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Rough", "Mush",  "Rock",  "Land",  "Land",  "Rock",  "Rough", "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Tree",  "Tree",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Rough", "Mush",  "Land",  "Mush",  "Rough", "Land",  "Rough", "Rock",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rough", "Tree",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Rough", "Land",  "Land",  "Land",  "Rough", "Land",  "Rough", "Rock",  "Rough", "Mush",  "Land",  "Land",  "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rough", "Rough", "Rough", "Land",  "Rock",  "Rock",  "Rough", "Rough", "Rough", "Rough", "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Mush",  "Land",  "Land",  "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rough", "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rough", "Land",  "Rough", "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Land",  "Land",  "Rough", "Mush",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Land",  "Rough", "Rough", "Rough", "Rock",  "Land",  "Rough", "Land",  "Land",  "Rock",  "Rough", "Mush",  "Mush",  "Mush",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Land",  "Land",  "Rough", "Rock",  "Rock",  "Land",  "Rock",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Land",  "Rough", "Land",  "Land",  "Rock",  "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Land",  "Rock",  "Land",  "Land",  "Rough", "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Mush",  "Land",  "Rough", "Mush",  "Land",  "Land",  "Rock",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Land",  "Rock",  "Land",  "Land",  "Rough", "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rock",  "Land",  "Land",  "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Land",  "Rock",  "Water", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Land",  "Land",  "Rough", "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Rough", "Land",  "Mush",  "Mush",  "Mush",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Mush",  "Mush",  "Mush",  "Rough", "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Land",  "Rough", "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Water", "Water", "Land",  "Rough", "Land",  "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Rough", "Land",  "Land",  "Land",  "Land",  "Land",  "Rough", "Rock",  "Rock"},
	{"Land",  "Land",  "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Rock",  "Water", "Rock",  "Water", "Water", "Land",  "Rough", "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Rough", "Rough", "Land",  "Rough", "Rough", "Rock",  "Land",  "Mush",  "Rock",  "Rock"},
	{"Land",  "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Water", "Water", "Water", "Water", "Water", "Land",  "Land",  "Land",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Rough", "Land",  "Rough", "Rock",  "Rock",  "Rough", "Land",  "Rough", "Rough", "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Land",  "Land",  "Land",  "Water", "Water", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rough", "Land",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Mush",  "Mush",  "Land",  "Water", "Rock",  "Rock",  "Water", "Land",  "Land",  "Rough", "Rough", "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Land",  "Land",  "Water", "Water", "Water", "Water", "Land",  "Rock",  "Rock",  "Rock",  "Rough", "Land",  "Land",  "Rough", "Rough", "Rough", "Rough", "Mush",  "Land",  "Land",  "Rock",  "Rock",  "Water", "Water", "Land",  "Land",  "Rough", "Rock",  "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Land",  "Water", "Water", "Water", "Water", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Land",  "Rough", "Land",  "Mush",  "Land",  "Land",  "Water", "Rock",  "Rock",  "Rough", "Rough", "Land",  "Land",  "Water", "Water", "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Land",  "Land",  "Water", "Water", "Water", "Water", "Water", "Rock",  "Rock",  "Rock",  "Water", "Water", "Water", "Land",  "Rough", "Mush",  "Rough", "Mush",  "Rock",  "Rock",  "Water", "Water", "Rough", "Mush",  "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Rock",  "Land",  "Water", "Water", "Water", "Water", "Water", "Land",  "Rock",  "Rock",  "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Rock",  "Rough", "Rough", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Land",  "Land",  "Land",  "Land",  "Rock",  "Water", "Water", "Water", "Rock",  "Rock",  "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Rough", "Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rough", "Rough", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Mush",  "Mush",  "Land",  "Land",  "Land",  "Rough", "Rough", "Rock",  "Mush",  "Mush",  "Land",  "Mush",  "Mush",  "Land",  "Mush",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Water", "Land",  "Land",  "Land",  "Land",  "Rough", "Land",  "Rock",  "Land",  "Land",  "Land",  "Rough", "Rough", "Mush",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Land",  "Land",  "Water", "Land",  "Water", "Land",  "Land",  "Land",  "Land",  "Rough", "Rough", "Water", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Land",  "Land",  "Water", "Land",  "Mush",  "Mush",  "Rock",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Rough", "Land",  "Land",  "Land",  "Rough", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Rough", "Rough", "Land",  "Water", "Water", "Water", "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Water", "Rough", "Land",  "Water", "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"},
	{"Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Land",  "Land",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock",  "Rock"}
}

ConvertHexTiles()

SetRawTile(31, 56, "Water")
SetRawTile(53, 31, "Rock")

-- make the lava chasms by the forge into land, so that the forge can be placed
SetRawTile(30, 49, "Land")
SetRawTile(30, 50, "Land")
SetRawTile(31, 49, "Land")
SetRawTile(31, 50, "Land")
SetRawTile(32, 52, "Land")
SetRawTile(32, 53, "Land")
SetRawTile(33, 52, "Land")
SetRawTile(33, 53, "Land")
SetRawTile(34, 49, "Land")
SetRawTile(34, 50, "Land")
SetRawTile(35, 49, "Land")
SetRawTile(35, 50, "Land")

AdjustRawMapTileIrregularities(0, Map.Info.MapWidth - 1, 0, Map.Info.MapHeight - 1)

-- rectify cave wall pieces which appear too much like separate small blocks
SetRawTile(7, 20, "Rock")
SetRawTile(24, 47, "Water")
SetRawTile(26, 50, "Water")
SetRawTile(32, 39, "Water")
SetRawTile(33, 55, "Water")
SetRawTile(36, 55, "Water")
SetRawTile(37, 55, "Water")
SetRawTile(37, 10, "Rock")
SetRawTile(49, 22, "Rock")
SetRawTile(49, 49, "Water")
SetRawTile(52, 26, "Rock")
SetRawTile(54, 37, "Water")
SetRawTile(55, 25, "Water")
SetRawTile(61, 37, "Water")

-- clear space for glyphs
SetRawTile(27, 56, "Land")
SetRawTile(27, 57, "Land")
SetRawTile(28, 56, "Land")
SetRawTile(28, 57, "Land")
SetRawTile(27, 58, "Land")

ApplyRawTiles()

-- Player Setup
if (ForTheMotherland) then
	SetStartView(0, 32, 50)
	SetPlayerData(0, "RaceName", "dwarf")
	SetPlayerData(0, "Resources", "gold", 0)
	SetPlayerData(0, "Resources", "lumber", 0)
	SetPlayerData(0, "Resources", "oil", 0)
	SetPlayerData(0, "Name", "Dwarves")
	SetAiType(0, "ai_red_2014")
else
	SetStartView(0, 16, 16)
	SetPlayerData(0, "RaceName", "dwarf")
	SetPlayerData(0, "Resources", "gold", 5000)
	SetPlayerData(0, "Resources", "lumber", 2500)
	SetPlayerData(0, "Resources", "oil", 0)
	SetPlayerData(0, "Faction", "Norlund Clan")
	SetAiType(0, "land-attack")
end
SetStartView(1, 4, 20)
if (ForTheMotherland) then
	SetPlayerData(1, "RaceName", "goblin")
	SetPlayerData(1, "Resources", "gold", 0)
	SetPlayerData(1, "Resources", "lumber", 0)
	SetPlayerData(1, "Resources", "oil", 0)
	SetPlayerData(1, "Name", "Goblins")
	SetAiType(1, "ai_red_2014")
else
	SetPlayerData(1, "RaceName", "dwarf")
	SetPlayerData(1, "Resources", "gold", 10000)
	SetPlayerData(1, "Resources", "lumber", 5000)
	SetPlayerData(1, "Resources", "oil", 0)
	SetPlayerData(1, "Faction", "Shinsplitter Clan")
	SetAiType(1, "land-attack")
end
SetStartView(2, 70, 43)
SetPlayerData(2, "RaceName", "kobold")
SetPlayerData(2, "RaceName", "dwarf")
SetPlayerData(2, "Resources", "gold", 0)
SetPlayerData(2, "Resources", "lumber", 0)
SetPlayerData(2, "Resources", "oil", 0)
SetPlayerData(2, "Name", "Svafnir")
SetAiType(2, "land-attack")
SetStartView(3, 32, 50)
SetPlayerData(3, "RaceName", "dwarf")
SetPlayerData(3, "Resources", "gold", 0)
SetPlayerData(3, "Resources", "lumber", 0)
SetPlayerData(3, "Resources", "oil", 0)
if (ForTheMotherland) then
	SetPlayerData(3, "Name", "Dwarves")
else
	SetPlayerData(3, "Name", "Abandoned Stronghold")
end
SetAiType(3, "passive")
SetStartView(4, 32, 50)
SetPlayerData(4, "RaceName", "dwarf")
SetPlayerData(4, "Resources", "gold", 2000)
SetPlayerData(4, "Resources", "lumber", 1000)
SetPlayerData(4, "Resources", "oil", 0)
SetPlayerData(4, "Name", "Dwarves")
if (ForTheMotherland) then
	SetAiType(4, "ai_redribbon_2014")
else
	SetAiType(4, "passive")
end
SetStartView(5, 4, 20)
SetPlayerData(5, "RaceName", "goblin")
SetPlayerData(5, "Resources", "gold", 2000)
SetPlayerData(5, "Resources", "lumber", 1000)
SetPlayerData(5, "Resources", "oil", 0)
SetPlayerData(5, "Name", "Goblins")
if (ForTheMotherland) then
	SetAiType(5, "ai_redribbon_2014")
else
	SetAiType(5, "passive")
end
SetPlayerData(15, "RaceName", "neutral")

if (GrandStrategy == false) then
	unit = CreateUnit("unit-gold-mine", 15, {4, 11}) -- Shinsplitter Camp Gold Mine
	SetResourcesHeld(unit, 100000)

	-- volcanic craters near the forge
	unit = CreateUnit("unit-volcanic-crater", 15, {30, 47})
	unit = CreateUnit("unit-volcanic-crater", 15, {33, 47})
	unit = CreateUnit("unit-volcanic-crater", 15, {30, 52})
	unit = CreateUnit("unit-volcanic-crater", 15, {33, 52})

	if (ForTheMotherland) then
		-- dwarves' glyphs
		unit = CreateUnit("unit-glyph", 15, {27, 56})
		unit = CreateUnit("unit-glyph", 15, {27, 57})
		unit = CreateUnit("unit-glyph", 15, {27, 58})
		unit = CreateUnit("unit-glyph", 15, {27, 59})
		unit = CreateUnit("unit-glyph", 15, {27, 60})
		unit = CreateUnit("unit-glyph", 15, {27, 61})
		unit = CreateUnit("unit-glyph", 15, {27, 62})
		unit = CreateUnit("unit-glyph", 15, {27, 63})
		unit = CreateUnit("unit-glyph", 15, {28, 56})
		unit = CreateUnit("unit-glyph", 15, {28, 57})
		unit = CreateUnit("unit-glyph", 15, {28, 58})
		unit = CreateUnit("unit-glyph", 15, {28, 59})
		unit = CreateUnit("unit-glyph", 15, {28, 60})
		unit = CreateUnit("unit-glyph", 15, {28, 61})
		unit = CreateUnit("unit-glyph", 15, {28, 62})
		unit = CreateUnit("unit-glyph", 15, {28, 63})
		
		-- goblins' glyphs
		unit = CreateUnit("unit-glyph", 15, {6, 2})
		unit = CreateUnit("unit-glyph", 15, {6, 3})
		unit = CreateUnit("unit-glyph", 15, {6, 4})
		unit = CreateUnit("unit-glyph", 15, {6, 5})
		unit = CreateUnit("unit-glyph", 15, {6, 6})
		unit = CreateUnit("unit-glyph", 15, {6, 7})
		unit = CreateUnit("unit-glyph", 15, {6, 8})
		unit = CreateUnit("unit-glyph", 15, {6, 9})
		unit = CreateUnit("unit-glyph", 15, {7, 2})
		unit = CreateUnit("unit-glyph", 15, {7, 3})
		unit = CreateUnit("unit-glyph", 15, {7, 4})
		unit = CreateUnit("unit-glyph", 15, {7, 5})
		unit = CreateUnit("unit-glyph", 15, {7, 6})
		unit = CreateUnit("unit-glyph", 15, {7, 7})
		unit = CreateUnit("unit-glyph", 15, {7, 8})
		unit = CreateUnit("unit-glyph", 15, {7, 9})

		unit = CreateUnit("unit-dwarven-smithy", 4, {31, 49})
		unit = CreateUnit("unit-dwarven-barracks", 4, {27, 47})
		unit = CreateUnit("unit-dwarven-guard-tower", 4, {41, 47})
		unit = CreateUnit("unit-dwarven-guard-tower", 4, {41, 49})

		unit = CreateUnit("unit-dwarven-thane", 0, {27, 55})
		SetUnitVariable(unit, "ForTheMotherland", 1)

		unit = CreateUnit("unit-goblin-town-hall", 5, {1, 19})
		unit = CreateUnit("unit-goblin-mess-hall", 5, {1, 30})
		unit = CreateUnit("unit-dwarven-guard-tower", 5, {4, 26})
		unit = CreateUnit("unit-dwarven-guard-tower", 5, {4, 28})

		unit = CreateUnit("unit-goblin-spearman", 1, {6, 1})
		IncreaseUnitLevel(unit, 2, true)
		SetUnitVariable(unit, "ForTheMotherland", 1)
	else
		if (GetPlayerData(0, "Name") ~= "Shorbear Clan" and GetPlayerData(0, "Name") ~= "Shinsplitter Clan" and (GetThisPlayer() ~= 0 or (PlayerFaction ~= "Shorbear Clan" and PlayerFaction ~= "Shinsplitter Clan"))) then
			unit = CreateUnit("unit-hero-rugnur", 0, {16, 16})
			unit = CreateUnit("unit-hero-baglur", 0, {16, 16})
			unit = CreateUnit("unit-hero-thursagan", 0, {16, 16})
			unit = CreateUnit("unit-dwarven-gryphon-rider", 0, {16, 16}) -- Krawg
			IncreaseUnitLevel(unit, 1, true)
		end

		-- base for the Shinsplitters
		unit = CreateUnit("unit-dwarven-town-hall", 1, {1, 19})


		unit = CreateUnit("unit-dwarven-thane", 1, {4, 20}) -- Crintil

		-- create a few more steelclads, to make the Shinsplitters have more of a fighting force
		unit = CreateUnit("unit-dwarven-steelclad", 1, {4, 28})
		unit = CreateUnit("unit-dwarven-steelclad", 1, {4, 28})
		unit = CreateUnit("unit-dwarven-steelclad", 1, {4, 28})


		unit = CreateUnit("unit-dwarven-miner", 1, {4, 20})
		unit = CreateUnit("unit-dwarven-miner", 1, {4, 20})
		unit = CreateUnit("unit-dwarven-miner", 1, {4, 20})
		unit = CreateUnit("unit-dwarven-miner", 1, {4, 20})
		unit = CreateUnit("unit-dwarven-miner", 1, {4, 20})


		-- the enemy gets mercenaries
		unit = CreateUnit("unit-surghan-mercenary-steelclad", 1, {4, 28})
		unit = CreateUnit("unit-surghan-mercenary-steelclad", 1, {4, 28})
		unit = CreateUnit("unit-surghan-mercenary-steelclad", 1, {4, 28})

		-- extra mercenary for normal difficulty and beyond
		unit = CreateUnit("unit-surghan-mercenary-steelclad", 1, {4, 28})

		-- two extra mercenaries for hard difficulty
	--	unit = CreateUnit("unit-surghan-mercenary-steelclad", 1, {4, 28})
	--	unit = CreateUnit("unit-surghan-mercenary-steelclad", 1, {4, 28})

		unit = CreateUnit("unit-surghan-mercenary-thane", 1, {4, 28})
		unit = CreateUnit("unit-surghan-mercenary-thane", 1, {4, 28})
		unit = CreateUnit("unit-surghan-mercenary-thane", 1, {4, 28})
		unit = CreateUnit("unit-dwarven-scout", 1, {4, 28})
		IncreaseUnitLevel(unit, 2, true)
		unit = CreateUnit("unit-dwarven-scout", 1, {4, 28})
		IncreaseUnitLevel(unit, 2, true)

		-- abandoned dwarven buildings
		unit = CreateUnit("unit-dwarven-smithy", 3, {31, 49})

		unit = CreateUnit("unit-dwarven-guard-tower", 3, {20, 12}) -- add some rescuable dwarven guard towers to buy some time from the attackers, so that Rugnur and his companions can reach the forge
		unit = CreateUnit("unit-dwarven-guard-tower", 3, {22, 17})
		unit = CreateUnit("unit-dwarven-guard-tower", 3, {24, 13})
	--	unit = CreateUnit("unit-dwarven-guard-tower", 3, {41, 10}) -- having this tower next to the other one was creating to much of an impediment for later Shinsplitter attacks
	--	unit = CreateUnit("unit-dwarven-guard-tower", 3, {41, 14})
		unit = CreateUnit("unit-dwarven-guard-tower", 3, {37, 26})
		unit = CreateUnit("unit-dwarven-guard-tower", 3, {32, 34})
		unit = CreateUnit("unit-dwarven-guard-tower", 3, {31, 36})
		unit = CreateUnit("unit-dwarven-guard-tower", 3, {43, 37})
		unit = CreateUnit("unit-dwarven-guard-tower", 3, {57, 34})
		unit = CreateUnit("unit-dwarven-guard-tower", 3, {41, 47})
		unit = CreateUnit("unit-dwarven-guard-tower", 3, {41, 49})
		unit = CreateUnit("unit-dwarven-guard-tower", 3, {37, 50})

		SetDiplomacy(0, "enemy", 1)
		SetDiplomacy(0, "enemy", 2)
		SetDiplomacy(1, "enemy", 0)
		SetDiplomacy(1, "enemy", 2)
		SetDiplomacy(2, "enemy", 0)
		SetDiplomacy(2, "enemy", 1)
	end

--	unit = CreateUnit("unit-wyrm", 2, {8, 34}) -- Khrakrahs / Svafnir
	unit = CreateUnit("unit-wyrm", 2, {26, 31}) -- moved Svafnir here, so that he is accessible
	if (LoadedGame == false and GrandStrategy == false and unit) then
		SetUnitName(unit, "Svafnir")
	end

end

if (ForTheMotherland) then
	AiRedRibbon_Setup_2014()

	ftm_team[0] = 4
	ftm_team[1] = 5
	ftm_team[4] = 4
	ftm_team[5] = 5

	ftm_team_x1[0] = 27
	ftm_team_y1[0] = 56
	ftm_team_x2[0] = 28
	ftm_team_y2[0] = 63
	ftm_team_x1[4] = 27
	ftm_team_y1[4] = 56
	ftm_team_x2[4] = 28
	ftm_team_y2[4] = 63
	ftm_team_x1[1] = 6
	ftm_team_y1[1] = 2
	ftm_team_x2[1] = 7
	ftm_team_y2[1] = 9
	ftm_team_x1[5] = 6
	ftm_team_y1[5] = 2
	ftm_team_x2[5] = 7
	ftm_team_y2[5] = 9


	ftm_faction[0] = "Dwarves"
	ftm_faction[4] = "Dwarves"
	ftm_faction[1] = "Goblins"
	ftm_faction[5] = "Goblins"

	ftm_choice[4] = 0
	ftm_choice[5] = 1
	ftm_index_start[4] = 1
	ftm_index_end[4] = 6
	ftm_index_start[5] = 65
	ftm_index_end[5] = 67

	ftm_team_startx[0] = 27
	ftm_team_starty[0] = 55
	ftm_team_startx[1] = 6
	ftm_team_starty[1] = 2
	ftm_team_startx[4] = 32
	ftm_team_starty[4] = 50
	ftm_team_startx[5] = 4
	ftm_team_starty[5] = 20

	aiftm_loop[1] = 4
	aiftm_terminate[1] = 16
	aiftm_unit[1][0] = "unit-goblin-spearman"
	aiftm_quantity[1][0] = 6
	aiftm_unit[1][1] = "unit-goblin-spearman" -- should be worker
	aiftm_quantity[1][1] = 2
	aiftm_unit[1][2] = "unit-goblin-archer" -- should be veteran archer
	aiftm_quantity[1][2] = 1
	aiftm_unit[1][3] = "unit-goblin-spearman" -- should be veteran cavalry
	aiftm_quantity[1][3] = 1
	aiftm_unit[1][4] = "unit-goblin-archer"
	aiftm_quantity[1][4] = 2
	aiftm_unit[1][5] = "unit-goblin-spearman"
	aiftm_quantity[1][5] = 3
	aiftm_unit[1][6] = "unit-goblin-archer"
	aiftm_quantity[1][6] = 1
	aiftm_unit[1][7] = "unit-goblin-archer"
	aiftm_quantity[1][7] = 1
	aiftm_unit[1][8] = "unit-goblin-spearman" -- should be cavalry
	aiftm_quantity[1][8] = 1
	aiftm_unit[1][9] = "unit-goblin-war-machine"
	aiftm_quantity[1][9] = 1
	aiftm_unit[1][10] = "unit-goblin-spearman"
	aiftm_quantity[1][10] = 4
	aiftm_unit[1][11] = "unit-goblin-spearman"
	aiftm_quantity[1][11] = 3
	aiftm_unit[1][12] = "unit-goblin-spearman" -- should be cavalry
	aiftm_quantity[1][12] = 1
	aiftm_unit[1][13] = "unit-goblin-archer" -- should be flying rider
	aiftm_quantity[1][13] = 1
	aiftm_unit[1][14] = "unit-goblin-spearman"
	aiftm_quantity[1][14] = 4
	aiftm_unit[1][15] = "unit-goblin-archer"
	aiftm_quantity[1][15] = 1
	aiftm_unit[1][16] = "unit-goblin-spearman" -- should be heroic infantry
	aiftm_quantity[1][16] = 1
end

PlayMusic("music/knalgan_theme.ogg")

CreateCritters((Map.Info.MapWidth * Map.Info.MapHeight) / 512)
